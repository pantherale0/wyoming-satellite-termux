#!/data/data/com.termux/files/usr/bin/sh
: ${DIALOG=dialog}
: ${DIALOG_OK=0}
: ${DIALOG_CANCEL=1}
: ${DIALOG_ESC=255}
COMMAND=""
BRANCH="main"

for i in "$@"; do
  case $i in
    --branch=*)
      BRANCH="${i#*=}"
      shift
      ;;
    --restart)
      COMMAND="RESTART"
      shift
      ;;
    --disable)
      COMMAND="DISABLE"
      shift
      ;;
    --enable)
      COMMAND="ENABLE"
      shift
      ;;
    --start)
      COMMAND="START"
      shift
      ;;
    --stop)
      COMMAND="STOP"
      shift
      ;;
    --uninstall)
      COMMAND="UNINSTALL"
      shift
      ;;
    --reinstall-wakeword)
      COMMAND="REINSTALLWW"
      shift
      ;;
    --update)
      COMMAND="UPDATE"
      shift
      ;;
    --update-cli)
      COMMAND="UPDATECLI"
      shift
      ;;
    --configure)
      COMMAND="CONFIGURE"
      shift
      ;;
    -*|--*)
      echo "Unknown option $i"
      exit 1
      ;;
    *)
      ;;
  esac
done

echo "Wyoming Android CLI: $BRANCH"

enable_services () {
  sv-enable wyoming-satellite
  sv-enable wyoming-wakeword
  sv-enable wyoming-events
  sv-enable squeezelite
}

disable_services () {
  sv-disable wyoming-satellite
  sv-disable wyoming-wakeword
  sv-disable wyoming-events
  sv-disable squeezelite
  killall python3
  killall squeezelite
}

update_service () {
  local SVC_NAME="$1"
  local SVC_RUN_FILE="$2"
  rm -f "$PREFIX/var/service/$SVC_NAME/run"
  wget "https://raw.githubusercontent.com/pantherale0/wyoming-satellite-termux/refs/heads/$BRANCH/services/$SVC_RUN_FILE" -O $PREFIX/var/service/$SVC_NAME/run
  chmod +x $PREFIX/var/service/$SVC_NAME/run
}

if [ "$COMMAND" = "RESTART" ]; then
  echo "Stopping Wyoming services"
  disable_services
  sleep 5
  echo "Starting Wyoming services"
  enable_services
  exit 0
fi

if [ "$COMMAND" = "STOP" ]; then
  echo "Stopping Wyoming services"
  disable_services
  exit 0
fi

if [ "$COMMAND" = "START" ]; then
  echo "Starting Wyoming services"
  enable_services
  exit 0
fi

if [ "$COMMAND" = "UPDATECLI" ]; then
  echo "Updating Wyoming CLI"
  rm -f $PREFIX/bin/wyoming-cli
  wget "https://raw.githubusercontent.com/pantherale0/wyoming-satellite-termux/refs/heads/$BRANCH/scripts/wyoming-cli" -O $PREFIX/bin/wyoming-cli
  chmod a+x $PREFIX/bin/wyoming-cli
fi

if [ "$COMMAND" = "UPDATE" ]; then
  echo "Updating Wyoming Components"
  echo "Disabling Wyoming"
  disable_services
  echo "Downloading Wyoming Satellite..."
  cd $HOME/wyoming-satellite
  git add wyoming_satellite/__main__.py
  git stash # keep the injected faulthander
  git pull
  git stash pop # reapply injected faulthandler
  echo "Updating Wyoming Satellite"
  ./script/setup
  echo "Wyoming Satellite updated"
  echo "Downloading Wyoming WakeWord Changes"
  if [ -d "$HOME/wyoming-openwakeword" ]; then
    cd $HOME/wyoming-openwakeword
  elif [ -d "$HOME/wyoming-microwakeword" ]; then
    cd $HOME/wyoming-microwakeword
  fi
  git pull
  echo "Updating Wyoming WakeWord"
  ./script/Setup
  echo "Wyoming WakeWord updated"
  echo "Updating Wyoming Events"
  wget "https://raw.githubusercontent.com/pantherale0/wyoming-satellite-termux/refs/heads/$BRANCH/wyoming-events.py" -O ~/wyoming-events/wyoming-events.py
  python3 -m pip install wyoming aiohttp
  echo "Wyoming Events updated"
  echo "Updating system packages"
  pkg up
  echo "Updated system packages"
  echo "Checking version information from service configuration"
  EXISTING_VERSION=$(cat $PREFIX/var/service/wyoming-satellite/run |grep -oP 'export VERSION=\d' | cut -d '=' -f2)
  if [ "$EXISTING_VERSION" = "" ]; then
    echo "Migration to wyoming.conf required... Press ctrl+C to skip"
    sleep 10
    touch $HOME/wyoming.conf
    cat $PREFIX/var/service/wyoming-satellite/run |grep -oP '^export .*=.*$'|sed "s/export //g" >> $HOME/wyoming.conf
    echo "Migrated Satellite runtime parameters"
    cat $PREFIX/var/service/wyoming-events/run |grep -oP '^export .*=.*$'|sed "s/export //g" >> $HOME/wyoming.conf
    echo "Migrated Events runtime parameters"
  fi
  echo "Pulling latest runtime scripts"
  update_service "wyoming-satellite" "wyoming-satellite-android"
  if [ -d "$HOME/wyoming-openwakeword" ]; then
    update_service "wyoming-wakeword" "wyoming-wakeword-android"
  elif [ -d "$HOME/wyoming-microwakeword" ]; then
    update_service "wyoming-wakeword" "wyoming-mwakeword-android"
  fi
  update_service "wyoming-events" "wyoming-events-android"
  update_service "squeezelite" "squeezelite-android"
  echo "Update completed, enabling services"
  enable_services
  exit 0
fi

if [ "$COMMAND" = "REINSTALLWW" ]; then
  disable_services
  WAKE_WORD_SERVICE=$($DIALOG --stdout --title "Wyoming Configuration" \
            --backtitle "$INTERACTIVE_TITLE" \
            --radiolist "Wakeword Service" 50 50 5 \
            "mww" "MicroWakeWord" OFF \
            "oww" "OpenWakeWord" ON)

  if [ "$WAKE_WORD_SERVICE" = "mww" ]; then
    echo "Deleting OpenWakeWord if it exists"
    if [ -D "$HOME/wyoming-openwakeword" ]; then
      rm -rf "$HOME/wyoming-openwakeword"
    fi
    echo "Ensure python-tflite-runtime, ninja and patchelf are installed..."
    pkg install python-tflite-runtime ninja patchelf -y
    echo "Cloning Wyoming MicroWakeWord repo..."
    cd $HOME
    git clone https://github.com/rhasspy/wyoming-microwakeword.git
    echo "Enter wyoming-microwakeword directory..."
    cd wyoming-microwakeword
    echo "Allow system site packages in Wyoming MicroWakeWord setup script..."
    sed -i 's/\(builder = venv.EnvBuilder(with_pip=True\)/\1, system_site_packages=True/' ./script/setup
    echo "Running Wyoming MicroWakeWord setup script..."
    ./script/setup
    cd ..
    update_service "wyoming-wakeword" "wyoming-mwakeword-android"
  elif [ "$WAKE_WORD_SERVICE" = "oww" ]; then
    echo "Deleting MicronWakeWord if it exists"
    if [ -D "$HOME/wyoming-microwakeword" ]; then
      rm -rf "$HOME/wyoming-microwakeword"
    fi
    echo "Ensure python-tflite-runtime, ninja and patchelf are installed..."
    pkg install python-tflite-runtime ninja patchelf -y
    echo "Cloning Wyoming OpenWakeWord repo..."
    cd ~
    git clone https://github.com/rhasspy/wyoming-openwakeword.git
    echo "Enter wyoming-openwakeword directory..."
    cd wyoming-openwakeword
    echo "Allow system site packages in Wyoming OpenWakeWord setup script..."
    sed -i 's/\(builder = venv.EnvBuilder(with_pip=True\)/\1, system_site_packages=True/' ./script/setup
    echo "Running Wyoming OpenWakeWord setup script..."
    ./script/setup
    cd ..
    update_service "wyoming-wakeword" "wyoming-wakeword-android"
  fi

fi
